- name: Ensure Wiki | Ensure installation folder
  ansible.builtin.file:
    path: "{{ WIKI_INSTALLATION_PATH }}"
    state: directory

- name: Ensure Wiki | Ensure docker-compose.yml
  ansible.builtin.template:
    src: "{{ playbook_dir }}/../templates/wiki/docker-compose.yml.j2"
    dest: "{{ WIKI_INSTALLATION_PATH }}/docker-compose.yml"
  notify: Restart wiki

- name: Ensure Wiki | Ensure Docker context folder
  ansible.builtin.file:
    path: "{{ WIKI_INSTALLATION_PATH }}/context/LocalSettings.Custom"
    state: directory

####

- name: Ensure Wiki | Check if Docker context files templates exists
  ansible.builtin.stat:
    path: "{{ item.src }}"
  register: context_template_file
  with_items:
    - { src: "{{ playbook_dir }}/../templates/wiki/context/Dockerfile.j2", dest: "{{ WIKI_INSTALLATION_PATH }}/context/Dockerfile" }
    - { src: "{{ playbook_dir }}/../templates/wiki/context/LocalSettings.Custom/LocalSettings.Custom.php.j2", dest: "{{ WIKI_INSTALLATION_PATH }}/context/LocalSettings.Custom/LocalSettings.Custom.php" }
    - { src: "{{ playbook_dir }}/../templates/wiki/context/LocalSettings.Custom/LocalSettings.Paths.php.j2", dest: "{{ WIKI_INSTALLATION_PATH }}/context/LocalSettings.Custom/LocalSettings.Paths.php" }
    - { src: "{{ playbook_dir }}/../templates/wiki/context/LocalSettings.Custom/LocalSettings.Include.php.j2", dest: "{{ WIKI_INSTALLATION_PATH }}/context/LocalSettings.Custom/LocalSettings.Include.php" }
    - { src: "{{ playbook_dir }}/../templates/wiki/context/LocalSettings.Include.php.j2", dest: "{{ WIKI_INSTALLATION_PATH }}/context/LocalSettings.Include.php" }
    - { src: "{{ playbook_dir }}/../templates/wiki/context/startup-container.sh.j2", dest: "{{ WIKI_INSTALLATION_PATH }}/context/startup-container.sh" }
  delegate_to: localhost
  become: false

- name: Ensure Wiki | Ensure Docker context files
  ansible.builtin.template:
    src: "{{ item.item.src }}"
    dest: "{{ item.item.dest }}"
  when: item.stat.exists
  with_items: "{{ context_template_file.results }}"
  notify: Restart wiki

####

- name: Ensure Wiki | Check if custom files exists
  ansible.builtin.stat:
    path: "{{ item.src }}"
  register: custom_file
  with_items:
    - { src: "{{ local_wiki_folder }}/customization/logo.png", dest: "{{ WIKI_INSTALLATION_PATH }}/context/logo.png" }
    - { src: "{{ local_wiki_folder }}/customization/custom.scss", dest: "{{ WIKI_INSTALLATION_PATH }}/context/custom.scss" }
  delegate_to: localhost
  become: false

- name: Ensure Wiki | Ensure custom files
  ansible.builtin.copy:
    src: "{{ item.item.src }}"
    dest: "{{ item.item.dest }}"
  when: item.stat.exists
  with_items: "{{ custom_file.results }}"
  notify: Restart wiki

####

- name: Ensure Wiki | Make sure destination directories exist for additional PHP files
  file:
    path: "{{ WIKI_INSTALLATION_PATH }}/context/{{ item | dirname }}"
    state: directory
  with_items: "{{ WIKI_ADDITIONAL_PHP_TEMPLATES }}"
  when: WIKI_ADDITIONAL_PHP_TEMPLATES is defined

- name: Ensure Wiki | Ensure additional PHP files defined by templates
  ansible.builtin.template:
    src: "{{ local_wiki_folder }}/customization/{{ item }}.php.j2"
    dest: "{{ WIKI_INSTALLATION_PATH }}/context/{{ item }}.php"
  with_items: "{{ WIKI_ADDITIONAL_PHP_TEMPLATES }}"
  when: WIKI_ADDITIONAL_PHP_TEMPLATES is defined
  notify: Restart wiki

- name: Ensure Wiki | Check if custom Dockerfile exists
  delegate_to: localhost
  stat:
    path: "{{ local_wiki_folder }}/customization/Dockerfile.Custom.j2"
  register: dockerfile_custom_stat
  become: false

- block:
    - name: Ensure Wiki | Copy custom Dockerfile if exists
      template:
        src: "{{ local_wiki_folder }}/customization/Dockerfile.Custom.j2"
        dest: "{{ WIKI_INSTALLATION_PATH }}/context/Dockerfile.Custom"

    - name: Ensure Wiki | Read content of Dockerfile to append
      slurp:
        src: "{{ WIKI_INSTALLATION_PATH }}/context/Dockerfile.Custom"
      register: dockerfile_custom_content

    - name: Ensure Wiki | Append Dockerfile content to target Dockerfile
      lineinfile:
        dest: "{{ WIKI_INSTALLATION_PATH }}/context/Dockerfile"
        line: "{{ dockerfile_custom_content.content | b64decode }}"
        insertafter: EOF
  when: dockerfile_custom_stat.stat.exists

- block:
    - name: Ensure Wiki | Ensure TLS certificate (crt)
      ansible.builtin.copy:
        content: "{{ WIKI_TLS_CERTIFICATE.crt }}"
        dest: "{{ TRAEFIK_INSTALLATION_PATH }}/etc/certs/{{ WIKI_DOMAIN }}.crt"
      notify: Restart wiki

    - name: Ensure Wiki | Ensure TLS certificate (key)
      ansible.builtin.copy:
        content: "{{ WIKI_TLS_CERTIFICATE.key }}"
        dest: "{{ TRAEFIK_INSTALLATION_PATH }}/etc/certs/{{ WIKI_DOMAIN }}.key"
      notify: Restart wiki

    - name: Ensure Wiki | Ensure corresponding TLS configuration
      ansible.builtin.copy:
        dest: "{{ TRAEFIK_INSTALLATION_PATH }}/etc/dynamic/{{ WIKI_DOMAIN }}.yml"
        content: |
          tls:
            certificates:
              - certFile: /etc/traefik/certs/{{ WIKI_DOMAIN }}.crt
                keyFile: /etc/traefik/certs/{{ WIKI_DOMAIN }}.key
      notify: Restart wiki
  when: WIKI_TLS_CERTIFICATE is defined

- name: Ensure Wiki | Ensure TLS configuration for extra certs
  ansible.builtin.copy:
    dest: "{{ TRAEFIK_INSTALLATION_PATH }}/etc/dynamic/{{ WIKI_DOMAIN }}.yml"
    content: |
      tls:
        certificates:
          - certFile: /etc/traefik/extra-certs/{{ WIKI_DOMAIN }}.crt
            keyFile: /etc/traefik/extra-certs/{{ WIKI_DOMAIN }}.key
  when: WIKI_USES_EXTRA_CERT
  notify: Restart wiki
